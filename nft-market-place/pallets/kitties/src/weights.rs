
//! Autogenerated weights for `pallet_kitties`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-03-22, STEPS: `20`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/node-nft-market-place
// benchmark
// --chain
// dev
// --execution
// wasm
// --wasm-execution
// compiled
// --pallet
// pallet_kitties
// --extrinsic
// *
// --steps
// 20
// --repeat
// 10
// --json-file=raw.json
// --output
// ./pallets/kitties/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

pub trait WeightInfo {
	fn create_kitty() -> Weight;
}
/// Weight functions for `pallet_kitties`.
pub struct KittiesWeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for KittiesWeightInfo<T> {
	// Storage: RandomnessCollectiveFlip RandomMaterial (r:1 w:0)
	// Storage: unknown [0x3a65787472696e7369635f696e646578] (r:1 w:0)
	// Storage: SubstrateKitties KittyCnt (r:1 w:1)
	// Storage: SubstrateKitties Kitties (r:1 w:1)
	// Storage: SubstrateKitties KittiesOwned (r:1 w:1)
	fn create_kitty() -> Weight {
		(69_255_000 as Weight)
			// Standard Error: 71_000
			//.saturating_add((261_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
}

impl WeightInfo for () {
	fn create_kitty() -> Weight {
		(69_255_000 as Weight).saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
}
